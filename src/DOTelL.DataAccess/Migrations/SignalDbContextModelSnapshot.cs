// <auto-generated />
using System;
using DOTelL.DataAccess;
using Google.Protobuf.Collections;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OpenTelemetry.Proto.Common.V1;
using OpenTelemetry.Proto.Logs.V1;
using OpenTelemetry.Proto.Metrics.V1;
using OpenTelemetry.Proto.Resource.V1;
using OpenTelemetry.Proto.Trace.V1;

#nullable disable

namespace DOTelL.DataAccess.Migrations
{
    [DbContext(typeof(SignalDbContext))]
    partial class SignalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "data_oneof_case", new[] { "none", "gauge", "sum", "histogram", "exponential_histogram", "summary" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "severity_number", new[] { "unspecified", "trace", "trace2", "trace3", "trace4", "debug", "debug2", "debug3", "debug4", "info", "info2", "info3", "info4", "warn", "warn2", "warn3", "warn4", "error", "error2", "error3", "error4", "fatal", "fatal2", "fatal3", "fatal4" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "span_kind", new[] { "unspecified", "internal", "server", "client", "producer", "consumer" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status_code", new[] { "unset", "ok", "error" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DOTelL.DataAccess.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<RepeatedField<KeyValue>>("Attributes")
                        .HasColumnType("jsonb");

                    b.Property<AnyValue>("Body")
                        .HasColumnType("jsonb");

                    b.Property<long?>("Flags")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ObservedTimeUnixNano")
                        .HasColumnType("numeric(20,0)");

                    b.Property<Resource>("Resource")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ResourceSchemaUrl")
                        .HasColumnType("text");

                    b.Property<string>("SchemaUrl")
                        .HasColumnType("text");

                    b.Property<InstrumentationScope>("Scope")
                        .HasColumnType("jsonb");

                    b.Property<SeverityNumber?>("SeverityNumber")
                        .HasColumnType("severity_number");

                    b.Property<string>("SeverityText")
                        .HasColumnType("text");

                    b.Property<string>("SpanId")
                        .HasColumnType("text");

                    b.Property<decimal>("TimeUnixNano")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TraceId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("DOTelL.DataAccess.Models.Metric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<ExponentialHistogram>("ExponentialHistogram")
                        .HasColumnType("jsonb");

                    b.Property<Gauge>("Gauge")
                        .HasColumnType("jsonb");

                    b.Property<Histogram>("Histogram")
                        .HasColumnType("jsonb");

                    b.Property<Metric.DataOneofCase>("MetricType")
                        .HasColumnType("data_oneof_case");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Resource>("Resource")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ResourceSchemaUrl")
                        .HasColumnType("text");

                    b.Property<string>("SchemaUrl")
                        .HasColumnType("text");

                    b.Property<InstrumentationScope>("Scope")
                        .HasColumnType("jsonb");

                    b.Property<Sum>("Sum")
                        .HasColumnType("jsonb");

                    b.Property<Summary>("Summary")
                        .HasColumnType("jsonb");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Metrics");
                });

            modelBuilder.Entity("DOTelL.DataAccess.Models.Trace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<RepeatedField<KeyValue>>("Attributes")
                        .HasColumnType("jsonb");

                    b.Property<Status.Types.StatusCode>("Code")
                        .HasColumnType("status_code");

                    b.Property<decimal>("EndTimeUnixNano")
                        .HasColumnType("numeric(20,0)");

                    b.Property<RepeatedField<Span.Types.Event>>("Events")
                        .HasColumnType("jsonb");

                    b.Property<long?>("Flags")
                        .HasColumnType("bigint");

                    b.Property<Span.Types.SpanKind>("Kind")
                        .HasColumnType("span_kind");

                    b.Property<RepeatedField<Span.Types.Link>>("Links")
                        .HasColumnType("jsonb");

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParentSpanId")
                        .HasColumnType("text");

                    b.Property<Resource>("Resource")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<string>("ResourceSchemaUrl")
                        .HasColumnType("text");

                    b.Property<string>("SchemaUrl")
                        .HasColumnType("text");

                    b.Property<InstrumentationScope>("Scope")
                        .HasColumnType("jsonb");

                    b.Property<string>("SpanId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("StartTimeUnixNano")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("TraceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TraceState")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Traces");
                });
#pragma warning restore 612, 618
        }
    }
}
